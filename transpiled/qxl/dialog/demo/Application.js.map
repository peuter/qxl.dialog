{
  "version": 3,
  "sources": [
    "/home/runner/work/qxl.dialog/qxl.dialog/source/class/qxl/dialog/demo/Application.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "application",
    "Standalone",
    "members",
    "main",
    "log",
    "appender",
    "Native",
    "buttons",
    "label",
    "id",
    "method",
    "button_panel",
    "ui",
    "container",
    "Composite",
    "setLayout",
    "layout",
    "VBox",
    "setQxObjectId",
    "core",
    "Id",
    "getInstance",
    "register",
    "title",
    "basic",
    "Label",
    "setRich",
    "add",
    "blockerCheckBox",
    "form",
    "CheckBox",
    "addListener",
    "e",
    "qxl",
    "dialog",
    "Dialog",
    "useBlocker",
    "getData",
    "labelHBox",
    "radioButtonGroupHBox",
    "RadioButtonGroup",
    "HBox",
    "theme",
    "getModel",
    "manager",
    "Icon",
    "setTheme",
    "themes",
    "Theme",
    "getAll",
    "Object",
    "getOwnPropertyNames",
    "key",
    "type",
    "name",
    "indexOf",
    "button",
    "RadioButton",
    "setModel",
    "forEach",
    "button_data",
    "Button",
    "addOwnedQxObject",
    "enabled",
    "undefined",
    "setEnabled",
    "getRoot",
    "left",
    "top",
    "_replaceOwnedObject",
    "owner",
    "obj",
    "removeOwnedQxObject",
    "createAlert",
    "caption",
    "dlg",
    "alert",
    "set",
    "createWarning",
    "warning",
    "createError",
    "error",
    "createConfirm",
    "confirm",
    "promise",
    "then",
    "result",
    "dlg2",
    "createPrompt",
    "prompt",
    "createDialogChain",
    "dlg1",
    "dlg3",
    "dlg4",
    "createSelect",
    "select",
    "options",
    "value",
    "createForm",
    "formData",
    "selection",
    "i",
    "length",
    "getLabel",
    "getValue",
    "util",
    "format",
    "DateFormat",
    "Date",
    "min",
    "max",
    "maxWidth",
    "setLabelColumnWidth",
    "debug",
    "Serializer",
    "toJson",
    "createFormEmbedded",
    "rowspan",
    "row",
    "column",
    "_this",
    "FormEmbed",
    "message",
    "setupFormRendererFunction",
    "renderer",
    "MultiColumnFormRenderer",
    "Grid",
    "col",
    "setSpacing",
    "setColumnMaxWidth",
    "getLabelColumnWidth",
    "setColumnWidth",
    "setColumnAlign",
    "setColumnFlex",
    "_setLayout",
    "createWizard",
    "pageData",
    "Validate",
    "email",
    "wizard",
    "Wizard",
    "width",
    "allowCancel",
    "callback",
    "map",
    "start",
    "createLogin",
    "loginWidget",
    "Login",
    "image",
    "text",
    "checkCredentials",
    "finalCallback",
    "bind",
    "showForgotPassword",
    "forgotPasswordHandler",
    "window",
    "show",
    "__loginWidget",
    "username",
    "password",
    "err",
    "data",
    "loginError",
    "loginSuccess",
    "createProgress",
    "progressWidget",
    "Progress",
    "console",
    "counter",
    "incrementProgress",
    "progress",
    "lang",
    "Function",
    "delay",
    "createProgressWithLog",
    "cancelled",
    "showLog",
    "okButtonText",
    "hideWhenCancelled",
    "abortMessage",
    "textProgress",
    "setNewLogText",
    "msg",
    "newLogText",
    "demo",
    "Application"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo dialog library\n   https://github.com/qooxdoo/qxl.dialog\n\n   Copyright:\n     2007-2019 Christian Boulanger and others\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n\n\n/**\n * This is the main application class of your custom application \"dialog\"\n * @asset(dialog/*)\n * @require(qxl.dialog.Dialog)\n */\nqx.Class.define(\"qxl.dialog.demo.Application\",\n  {\n    extend: qx.application.Standalone,\n\n    /*\n    *****************************************************************************\n       MEMBERS\n    *****************************************************************************\n    */\n\n    members:\n      {\n        /**\n         * This method contains the initial application code and gets called\n         * during startup of the application\n         */\n        main: function () {\n          this.base(arguments);\n          qx.log.appender.Native;\n\n          /*\n           * button data\n           */\n          let buttons = [\n            {\n              label: \"Alert\",\n              id: \"alert\",\n              method: \"createAlert\"\n            },\n            {\n              label: \"Warning\",\n              id: \"warning\",\n              method: \"createWarning\"\n            },\n            {\n              label: \"Error\",\n              id: \"error\",\n              method: \"createError\"\n            },\n            {\n              label: \"Confirm\",\n              id: \"confirm\",\n              method: \"createConfirm\"\n            },\n            {\n              label: \"Prompt\",\n              id: \"prompt\",\n              method: \"createPrompt\"\n            },\n            {\n              label: \"Dialog Chain\",\n              id: \"dialog\",\n              method: \"createDialogChain\"\n            },\n            {\n              label: \"Select among choices\",\n              id: \"select\",\n              method: \"createSelect\"\n            },\n            {\n              label: \"Form\",\n              id: \"form\",\n              method: \"createForm\"\n            },\n            {\n              label: \"Embedded Multi-column Form\",\n              id: \"formEmbed\",\n              method: \"createFormEmbedded\"\n            },\n            {\n              label: \"Wizard\",\n              id: \"wizard\",\n              method: \"createWizard\"\n            },\n            {\n              label: \"Login\",\n              id: \"login\",\n              method: \"createLogin\"\n            },\n            {\n              label: \"Progress\",\n              id: \"progress\",\n              method: \"createProgress\"\n            },\n            {\n              label: \"Progress with Log\",\n              id: \"progress_with_log\",\n              method: \"createProgressWithLog\"\n            }\n          ];\n\n          /*\n           * dialog button panel\n           */\n          let button_panel = new qx.ui.container.Composite();\n          button_panel.setLayout(new qx.ui.layout.VBox(5));\n          button_panel.setQxObjectId(\"buttons\");\n          qx.core.Id.getInstance().register(button_panel);\n\n          let title = new qx.ui.basic.Label(\"<h2>Dialog Demo</h2>\");\n          title.setRich(true);\n          button_panel.add(title);\n\n          // check box\n          let blockerCheckBox = new qx.ui.form.CheckBox(\"Use coloured blocker (like < v.1.3)\");\n          blockerCheckBox.addListener(\"changeValue\", function (e) {\n            qxl.dialog.Dialog.useBlocker(e.getData());\n          });\n          button_panel.add(blockerCheckBox);\n\n          // icon theme switcher\n          let labelHBox = new qx.ui.basic.Label(\"<strong>Icon Theme</strong>\");\n          labelHBox.setRich(true);\n          button_panel.add(labelHBox);\n          let radioButtonGroupHBox = new qx.ui.form.RadioButtonGroup();\n          radioButtonGroupHBox.setLayout(new qx.ui.layout.HBox(5));\n          button_panel.add(radioButtonGroupHBox);\n          radioButtonGroupHBox.addListener(\"changeSelection\", function (e) {\n            let theme = e.getData()[0].getModel();\n            qx.theme.manager.Icon.getInstance().setTheme(theme);\n          });\n\n          // icon theme\n          let themes = qx.Theme.getAll();\n          for (let key of Object.getOwnPropertyNames(themes)) {\n            let theme = themes[key];\n            if (theme.type === \"meta\") {\n              //\n            }\n            if (theme.name.indexOf(\"qxl.dialog.theme.icon\") !== -1) {\n              let button = new qx.ui.form.RadioButton(theme.title);\n              button.setModel(theme);\n              radioButtonGroupHBox.add(button);\n            }\n          }\n\n          // buttons\n          button_panel.add(new qx.ui.basic.Label(\"Try out the following dialog widgets:\"));\n          buttons.forEach(function (button_data) {\n            let button = new qx.ui.form.Button(button_data.label);\n            button.setQxObjectId(button_data.id);\n            button_panel.addOwnedQxObject(button);\n            button.addListener(\"execute\", function () {\n              this[button_data.method](button_data.label, button);\n            }, this);\n            if (button_data.enabled !== undefined) {\n              button.setEnabled(button_data.enabled);\n            }\n            button_panel.add(button);\n          }, this);\n          this.getRoot().add(button_panel, {left: 100, top: 100});\n        },\n\n\n        _replaceOwnedObject: function(owner, obj, id=\"dialog\") {\n          try {\n            owner.removeOwnedQxObject(id);\n          } catch (e) {} // ignore error\n          obj.setQxObjectId(id);\n          owner.addOwnedQxObject(obj);\n        },\n\n        createAlert: function (caption, button) {\n          let dlg = qxl.dialog.Dialog\n            .alert(\"Hello World!\")\n            .set({caption});\n\n          // next line is for automated UI tests only, not needed for \"normal\" usage\n          this._replaceOwnedObject(button, dlg, \"dialog\");\n        },\n\n        createWarning: function (caption, button) {\n          let dlg = qxl.dialog.Dialog\n            .warning(\"I warned you!\")\n            .set({caption});\n          this._replaceOwnedObject(button, dlg, \"dialog\");\n        },\n\n        createError: function (caption, button) {\n          let dlg = qxl.dialog.Dialog\n            .error(\"Error, error, error, errr....!\")\n            .set({caption});\n          this._replaceOwnedObject(button, dlg, \"dialog\");\n        },\n\n        createConfirm: function (caption, button) {\n          let dlg = qxl.dialog.Dialog\n            .confirm(\"Do you really want to erase your hard drive?\")\n            .set({caption});\n          this._replaceOwnedObject(button, dlg, \"dialog1\");\n\n          dlg.promise()\n            .then(result => {\n              let dlg2 = qxl.dialog.Dialog.alert(\"Your answer was: \" + result)\n                  .set({caption: caption + \" 2\"});\n              this._replaceOwnedObject(button, dlg2, \"dialog2\");\n            });\n        },\n\n        createPrompt: function (caption, button) {\n          let dlg = qxl.dialog.Dialog\n            .prompt(\"Please enter the root password for your server\")\n            .set({caption});\n          this._replaceOwnedObject(button, dlg, \"dialog1\");\n          dlg.promise()\n            .then(result => {\n              let dlg2 = qxl.dialog.Dialog.alert(\"Your answer was: \" + result)\n                .set({caption: caption + \" 2\"});\n              this._replaceOwnedObject(button, dlg2, \"dialog2\");\n            });\n        },\n\n        /**\n         * Example for nested callbacks\n         */\n        createDialogChain: function (caption, button) {\n          let dlg1 = qxl.dialog.Dialog\n            .alert(\"This demostrates a series of 'nested' dialogs \")\n            .set({caption});\n          this._replaceOwnedObject(button, dlg1, \"dialog1\");\n          dlg1.promise()\n            .then(() => {\n              let dlg2 = qxl.dialog.Dialog\n                .confirm(\"Do you believe in the Loch Ness monster?\")\n                .set({caption: caption + \" 2\"});\n              this._replaceOwnedObject(button, dlg2, \"dialog2\");\n              return dlg2.promise();\n            })\n            .then(result => {\n              let dlg3 = qxl.dialog.Dialog\n                .confirm(\"You really \" + (result ? \"\" : \"don't \") + \"believe in the Loch Ness monster?\")\n                .set({caption: caption + \" 3\"});\n              this._replaceOwnedObject(button, dlg3, \"dialog3\");\n              return dlg3.promise();\n            })\n            .then(result => {\n              let dlg4 = qxl.dialog.Dialog\n                .alert(result ? \"I tell you a secret: It doesn't exist.\" : \"Good to know.\")\n                .set({caption: caption + \" 4\"});\n              this._replaceOwnedObject(button, dlg4, \"dialog4\");\n              return dlg4.promise();\n            });\n        },\n\n        /**\n         * Offer a selection of choices to the user\n         */\n        createSelect: function (caption, button) {\n          let dlg1 = qxl.dialog.Dialog\n            .select(\"Select the type of record to create:\")\n            .set({\n              caption: caption,\n              options: [\n                {label: \"Database record\", value: \"database\"},\n                {label: \"World record\", value: \"world\"},\n                {label: \"Pop record\", value: \"pop\"}\n              ]\n            });\n          this._replaceOwnedObject(button, dlg1, \"dialog1\");\n          dlg1.promise()\n            .then(result => {\n              let dlg2 = qxl.dialog.Dialog\n                .alert(\"You selected: '\" + result + \"'\")\n                .set({caption: caption + \" 2\"});\n              this._replaceOwnedObject(button, dlg2, \"dialog2\");\n              return dlg2.promise();\n            });\n        },\n\n        createForm: function (caption, button) {\n          let formData =\n            {\n              \"username\":\n                {\n                  \"type\": \"TextField\",\n                  \"label\": \"User Name\",\n                  \"value\": \"\",\n                  \"validation\": {\n                    \"required\": true\n                  }\n                },\n              \"address\":\n                {\n                  \"type\": \"TextArea\",\n                  \"label\": \"Address\",\n                  \"lines\": 3,\n                  \"value\": \"\"\n                },\n              \"domain\":\n                {\n                  \"type\": \"SelectBox\",\n                  \"label\": \"Domain\",\n                  \"value\": 1,\n                  \"options\": [\n                    {\"label\": \"Company\", \"value\": 0},\n                    {\"label\": \"Home\", \"value\": 1}\n                  ],\n                  \"events\": {\n                    \"changeSelection\": function(e)\n                    {\n                      const selection = e.getData();\n                      for (let i = 0; i < selection.length; i++) {\n                        qxl.dialog.Dialog.alert(\n                          \"Selected item: \" +\n                            selection[i].getModel().getLabel() +\n                            \" (\" + selection[i].getModel().getValue() + \")\");\n                      }\n                    }\n                  }\n                },\n              \"commands\":\n                {\n                  \"type\": \"ComboBox\",\n                  \"label\": \"Shell command to execute\",\n                  \"value\": \"\",\n                  \"options\": [\n                    {\"label\": \"ln -s *\"},\n                    {\"label\": \"rm -Rf /\"}\n                  ]\n                },\n              \"save_details\": {\n                \"type\": \"Checkbox\",\n                \"label\": \"Save form details\",\n                \"value\": true\n              },\n              \"executeDate\": {\n                \"type\": \"datefield\",\n                \"dateFormat\": new qx.util.format.DateFormat(\"dd.MM.yyyy HH:mm\"),\n                \"value\": new Date(),\n                \"label\": \"Execute At\"\n              },\n              \"area\": {\n                \"type\": \"spinner\",\n                \"label\": \"Area\",\n                \"value\": 25.5,\n                \"min\": -10,\n                \"max\": 100,\n                \"step\": 0.5,\n                \"fractionsDigits\": {min: 1, max: 7},\n                \"properties\": { maxWidth: 50 }\n              }\n            };\n\n          let form = qxl.dialog.Dialog.form(\"Please fill in the form\", formData).set({caption});\n          form.setLabelColumnWidth(200);\n          form.setQxObjectId(\"dialog\");\n          button.addOwnedQxObject(form);\n          form.promise()\n          .then(result => {\n            this.debug(qx.util.Serializer.toJson(result));\n            return qxl.dialog.Dialog\n              .alert(\"Thank you for your input. See log for result.\")\n              .set({caption: caption + \" 2\"})\n              .promise();\n          });\n        },\n\n        createFormEmbedded: function (caption, button) {\n          let formData =\n            {\n              \"username\":\n                {\n                  \"type\": \"TextField\",\n                  \"label\": \"User Name\",\n                  \"value\": \"\",\n                  \"validation\": {\n                    \"required\": true\n                  }\n                },\n              \"address\":\n                {\n                  \"type\": \"TextArea\",\n                  \"label\": \"Address\",\n                  \"lines\": 3,\n                  \"value\": \"\",\n                  \"userdata\": {\n                    rowspan: 2\n                  }\n                },\n              \"domain\":\n                {\n                  \"type\": \"SelectBox\",\n                  \"label\": \"Domain\",\n                  \"value\": 1,\n                  \"options\": [\n                    {\"label\": \"Company\", \"value\": 0},\n                    {\"label\": \"Home\", \"value\": 1}\n                  ]\n                },\n              \"commands\":\n                {\n                  \"type\": \"ComboBox\",\n                  \"label\": \"Shell command to execute\",\n                  \"value\": \"\",\n                  \"options\": [\n                    {\"label\": \"ln -s *\"},\n                    {\"label\": \"rm -Rf /\"}\n                  ]\n                },\n              \"list\": {\n                \"type\": \"list\",\n                \"label\": \"Options\",\n                \"options\": [\n                  { label : \"Option 1\", value : \"opt1\" },\n                  { label : \"Option 2\", value : \"opt2\" },\n                  { label : \"Option 3\", value : \"opt3\" }\n                ]\n              },\n              \"save_details\": {\n                \"type\": \"Checkbox\",\n                \"label\": \"Save form details\",\n                \"value\": true\n              },\n              \"executeDate\": {\n                \"type\": \"datefield\",\n                \"dateFormat\": new qx.util.format.DateFormat(\"dd.MM.yyyy HH:mm\"),\n                \"value\": new Date(),\n                \"label\": \"Execute At\",\n                \"userdata\": {\n                  row: 0,\n                  column: 2\n                }\n              },\n              \"area\": {\n                \"type\": \"spinner\",\n                \"label\": \"Area\",\n                \"value\": 25.5,\n                \"min\": -10,\n                \"max\": 100,\n                \"step\": 0.5,\n                \"fractionsDigits\": {min: 1, max: 7},\n                \"properties\": {\n                  \"maxWidth\": 80\n                }\n              }\n            };\n\n//          let form = qxl.dialog.DialogEmbed.form(\"Please fill in the form\", formData);\n          let _this = this;\n          let form = new qxl.dialog.FormEmbed({\n            message : \"Please fill in the form\",\n            formData : formData,\n            setupFormRendererFunction : function(form) {\n              var renderer = new qxl.dialog.MultiColumnFormRenderer(form);\n              var layout = new qx.ui.layout.Grid();\n              const col = renderer.column;\n              \n              layout.setSpacing(6);\n\n              layout.setColumnMaxWidth(col(0), this.getLabelColumnWidth());\n              layout.setColumnWidth(col(0), this.getLabelColumnWidth());\n              layout.setColumnAlign(col(0), \"right\", \"top\");\n\n              layout.setColumnFlex(col(1), 1);\n              layout.setColumnAlign(col(1), \"left\", \"top\");\n\n              layout.setColumnMaxWidth(col(2), this.getLabelColumnWidth());\n              layout.setColumnWidth(col(2), this.getLabelColumnWidth());\n              layout.setColumnAlign(col(2), \"right\", \"top\");\n\n              layout.setColumnFlex(col(3), 1);\n              layout.setColumnAlign(col(3), \"left\", \"top\");\n\n              renderer._setLayout(layout);\n              return renderer;\n            }\n          });\n          this.getRoot().add(form, { left: 400, top: 100 });\n          form.setQxObjectId(\"dialog\");\n          button.addOwnedQxObject(form);\n          form.promise()\n          .then(result => {\n            this.debug(qx.util.Serializer.toJson(result));\n            return qxl.dialog.Dialog\n              .alert(\"Thank you for your input. See log for result.\")\n              .set({caption: caption + \" 2\"})\n              .promise();\n          });\n        },\n\n        createWizard: function (caption) {\n          /*\n           * wizard widget\n           */\n          let pageData =\n            [\n              {\n                \"message\": \"<p style='font-weight:bold'>Create new account</p><p>Please create a new mail account.</p><p>Select the type of account you wish to create</p>\",\n                \"formData\": {\n                  \"accountTypeLabel\": {\n                    \"type\": \"label\",\n                    \"label\": \"Please select the type of account you wish to create.\"\n                  },\n                  \"accountType\": {\n                    \"type\": \"radiogroup\",\n                    \"label\": \"Account Type\",\n                    \"options\":\n                      [\n                        {\"label\": \"E-Mail\", \"value\": \"email\"},\n                        {\"label\": \".mac\", \"value\": \".mac\"},\n                        {\"label\": \"RSS-Account\", \"value\": \"rss\"},\n                        {\"label\": \"Google Mail\", \"value\": \"google\"},\n                        {\"label\": \"Newsgroup Account\", \"value\": \"news\"}\n                      ]\n                  }\n                }\n              },\n              {\n                \"message\": \"<p style='font-weight:bold'>Identity</p><p>This information will be sent to the receiver of your messages.</p>\",\n                \"formData\": {\n                  \"label1\": {\n                    \"type\": \"label\",\n                    \"label\": \"Please enter your name as it should appear in the 'From' field of the sent message. \"\n                  },\n                  \"fullName\": {\n                    \"type\": \"textfield\",\n                    \"label\": \"Your Name\",\n                    \"validation\": {\n                      \"required\": true\n                    }\n                  },\n                  \"label2\": {\n                    \"type\": \"label\",\n                    \"label\": \"Please enter your email address. This is the address used by others to send you messages.\"\n                  },\n                  \"email\": {\n                    \"type\": \"textfield\",\n                    \"label\": \"E-Mail Address\",\n                    \"validation\": {\n                      \"required\": true,\n                      \"validator\": qx.util.Validate.email()\n                    }\n                  },\n                  \"birthday\": {\n                    \"type\": \"datefield\",\n                    \"label\": \"Birthday\"\n                  }\n                }\n              },\n              {\n                \"message\": \"<p style='font-weight:bold'>Account</p><p>Bla bla bla.</p>\",\n                \"formData\": {\n                  \"serverType\": {\n                    \"type\": \"radiogroup\",\n                    \"orientation\": \"horizontal\",\n                    \"label\": \"Select the type of email server\",\n                    \"options\":\n                      [\n                        {\"label\": \"POP\", \"value\": \"pop\"},\n                        {\"label\": \"IMAP\", \"value\": \"imap\"}\n                      ]\n                  },\n                  \"serverAddressLabel\": {\n                    \"type\": \"label\",\n                    \"label\": \"Please enter the server for the account.\"\n                  },\n                  \"serverAddress\": {\n                    \"type\": \"textfield\",\n                    \"label\": \"E-Mail Server\",\n                    \"validation\": {\n                      \"required\": true\n                    }\n                  }\n                }\n              },\n              {\n                \"message\": \"<p style='font-weight:bold'>Username</p><p>Bla bla bla.</p>\",\n                \"formData\": {\n                  \"emailUserName\": {\n                    \"type\": \"textfield\",\n                    \"label\": \"Inbox server user name:\"\n                  }\n                }\n              }\n            ];\n          let wizard = new qxl.dialog.Wizard({\n            width: 500,\n            maxWidth: 500,\n            pageData: pageData,\n            allowCancel: true,\n            callback: map => {\n              qxl.dialog.Dialog.alert(\"Thank you for your input. See log for result.\");\n              this.debug(qx.util.Serializer.toJson(map));\n            },\n            caption: caption\n          });\n          wizard.start();\n        },\n\n        /**\n         * Creates a sample login widget\n         */\n        createLogin: function (caption, button) {\n          let loginWidget = new qxl.dialog.Login({\n            image: \"dialog/logo.gif\",\n            text: \"Please log in, using 'demo'/'demo'\",\n            checkCredentials: this.checkCredentials,\n            callback: this.finalCallback.bind(this),\n            showForgotPassword: true,\n            caption: caption,\n            forgotPasswordHandler: function () {\n              window.alert(\"Too bad. I cannot remember it either.\");\n            }\n          });\n          this._replaceOwnedObject(button, loginWidget, \"window\");\n\n          // you can optionally attach event listeners, for example to\n          // do some animation (for example, an Mac OS-like \"shake\" effect)\n          loginWidget.addListener(\"loginSuccess\", function (e) {\n            // do something to indicated that the user has logged in!\n          });\n          loginWidget.addListener(\"loginFailure\", function (e) {\n            // User rejected! Shake your login widget!\n          });\n          loginWidget.show();\n          this.__loginWidget = loginWidget;\n        },\n\n        /**\n         * Sample asyncronous function for checking credentials that takes the\n         * username, password and a callback function as parameters. After performing\n         * the authentication, the callback is called with the result, which should\n         * be undefined or null if successful, and the error message if the\n         * authentication failed. If the problem was not the authentication, but some\n         * other exception, you could pass an error object.\n         * @param username {String}\n         * @param password {String}\n         * @param callback {Function} The callback function that needs to be called with\n         * (err, data) as arguments\n         */\n        checkCredentials: function (username, password, callback) {\n          if (username === \"demo\" && password === \"demo\") {\n            callback(null, username);\n          } else {\n            callback(\"Wrong username or password!\");\n          }\n        },\n\n        /**\n         * Sample final callback to react on the result of the authentication\n         * @param err {String|Error|undefined|null}\n         * @param data\n         */\n        finalCallback: function (err, data) {\n          if (err) {\n            let loginError = qxl.dialog.Dialog\n              .alert(err)\n              .set({ caption: \"Login Error\" });\n            this._replaceOwnedObject(this.__loginWidget, loginError, \"error\");\n          } else {\n            let loginSuccess = qxl.dialog.Dialog\n              .alert(\"User '\" + data + \"' is now logged in.\")\n              .set({ caption: \"Login Success\" });\n            this._replaceOwnedObject(this.__loginWidget, loginSuccess, \"success\");\n          }\n        },\n\n        createProgress: function (caption) {\n          let progressWidget = new qxl.dialog.Progress({\n            caption: caption,\n            allowCancel: true\n          });\n          progressWidget.show()\n            .promise()\n            .then(function (result) {\n              console.log(\"Progress widget returned: \" + result);\n            });\n\n          let counter = 0;\n          (function incrementProgress() {\n            progressWidget.set({\n              progress: counter,\n              message: counter + \"% completed\",\n              allowCancel: true\n            });\n            if (counter++ === 100) {\n             return;\n            }\n            qx.lang.Function.delay(incrementProgress, 100);\n          })();\n        },\n\n        createProgressWithLog: function (caption) {\n          let cancelled = false; // used in closures\n          let progressWidget = new qxl.dialog.Progress({\n            showLog: true,\n            caption: caption,\n            okButtonText: \"Continue\",\n            allowCancel: true,\n            hideWhenCancelled: false\n          });\n          progressWidget.show()\n            .promise()\n            .then(function (result) {\n              if (!result) {\n                // user clicked on \"cancel\" button, can also be intercepted by listening\n                // to the \"cancel event\"\n                cancelled = true;\n              }\n              console.log(\"Progress widget returned: \" + result);\n            });\n          let counter = 0;\n          let abortMessage = false;\n          (function textProgress() {\n            if (cancelled) {\n              progressWidget.set({\n                progress: counter,\n                message: \"Aborting...\"\n              });\n              if (!abortMessage) {\n                progressWidget.setNewLogText(\"Aborting...\");\n                abortMessage = true;\n              }\n            } else {\n              progressWidget.set({\n                progress: counter,\n                message: counter + \"% completed\"\n              });\n              if (counter % 10 === 0) {\n                progressWidget.setNewLogText(counter + \"% completed\");\n              }\n            }\n\n            if (counter++ === 100) {\n              let msg = cancelled ? \"Cancelled.\" : \"Completed.\";\n              progressWidget.set({\n                newLogText: msg,\n                message: msg\n              });\n              return;\n            }\n            if (cancelled) {\n              qx.lang.Function.delay(textProgress, 5);\n            } else {\n              qx.lang.Function.delay(textProgress, 100);\n            }\n          })();\n        }\n      }\n  });\n"
  ]
}